# define a GCP VM agent to support container management (by default agent doesn't support)
agents:
  provider: "gcp"
  machineType: "n1-standard-4"
  image: family/core-ubuntu-2204

steps:
  # ------------- Unit tests ---------------------
  - label: ":hammer: Unit tests with LS & ES 8.current :docker:"
    # Builds the plugin (with current changes) with the version defined in gradle.properties
    #   and against LS and ES 8.current
    # Runs unit tests on LS & ES 8.current docker
    command:
      - .buildkite/scripts/run_tests.sh
    env:
      ELASTIC_STACK_VERSION: "8.current"
      INTEGRATION: false

  - label: ":hammer: Unit tests with LS & ES 8.current-SNAPSHOT :docker:"
    # Builds the plugin (with current changes) with the version defined in gradle.properties
    #   and against LS and ES 8.current-SNAPSHOT
    # Runs unit tests on LS & ES 8.current-SNAPSHOT docker
    command:
      - .buildkite/scripts/run_tests.sh
    env:
      ELASTIC_STACK_VERSION: "8.current"
      SNAPSHOT: true
      INTEGRATION: false

  # ------------- Integration tests ---------------------
  - label: ":hammer: Integration tests with LS & ES 8.current :docker:"
    # Builds the plugin (with current changes) with the version defined in gradle.properties
    #   and against LS and ES 8.current
    # Runs integration tests on LS & ES 8.current docker
    command:
      - .buildkite/scripts/run_tests.sh
    env:
      ELASTIC_STACK_VERSION: "8.current"
      INTEGRATION: true
      SECURE_INTEGRATION: true

  - label: ":hammer: Integration tests with LS & ES 8.current-SNAPSHOT :docker:"
    # Builds the plugin (with current changes) with the version defined in gradle.properties
    #   and against LS and ES 8.current-SNAPSHOT
    # Runs integration tests on LS & ES 8.current-SNAPSHOT docker
    command:
      - .buildkite/scripts/run_tests.sh
    env:
      ELASTIC_STACK_VERSION: "8.current"
      SNAPSHOT: true
      INTEGRATION: true
      SECURE_INTEGRATION: true
      LOG_LEVEL: "info"
